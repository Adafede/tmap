<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="bindings_8cc" kind="file" language="C++">
    <compoundname>bindings.cc</compoundname>
    <includes local="no">pybind11/pybind11.h</includes>
    <includes local="no">pybind11/stl.h</includes>
    <includes local="no">pybind11/stl_bind.h</includes>
    <includes refid="layout_8hh" local="yes">layout.hh</includes>
    <includes refid="lshforest_8hh" local="yes">lshforest.hh</includes>
    <includes local="yes">cereal/cereal.hpp</includes>
    <includes local="no">sstream</includes>
    <includes local="no">vector</includes>
    <includes local="yes">cereal/types/concepts/pair_associative_container.hpp</includes>
    <includes local="no">map</includes>
    <includes local="no">tuple</includes>
    <includes local="no">cassert</includes>
    <includes local="no">cstring</includes>
    <includes local="no">string</includes>
    <includes local="no">limits</includes>
    <includes local="no">algorithm</includes>
    <includes local="no">iterator</includes>
    <includes local="no">functional</includes>
    <includes local="no">memory</includes>
    <includes local="no">cstdlib</includes>
    <includes local="no">cstddef</includes>
    <includes local="no">new</includes>
    <includes local="no">stdexcept</includes>
    <includes local="no">utility</includes>
    <includes local="no">cstdio</includes>
    <includes local="no">iosfwd</includes>
    <includes local="no">ios</includes>
    <includes local="yes">/home/daenu/Code/conda-mstmap/mstmap/src/tmap/sparsepp/spp_stdint.h</includes>
    <includes local="yes">/home/daenu/Code/conda-mstmap/mstmap/src/tmap/sparsepp/spp_config.h</includes>
    <includes local="no">stdint.h</includes>
    <includes local="yes">/home/daenu/Code/conda-mstmap/mstmap/src/tmap/sparsepp/spp_traits.h</includes>
    <includes local="yes">/home/daenu/Code/conda-mstmap/mstmap/src/tmap/sparsepp/spp_utils.h</includes>
    <includes local="no">initializer_list</includes>
    <includes refid="minhash_8hh" local="yes">minhash.hh</includes>
    <incdepgraph>
      <node id="66">
        <label>valarray</label>
      </node>
      <node id="38">
        <label>functional</label>
      </node>
      <node id="50">
        <label>limits</label>
      </node>
      <node id="42">
        <label>cereal/types/map.hpp</label>
      </node>
      <node id="51">
        <label>iterator</label>
      </node>
      <node id="26">
        <label>ogdf/packing/TileToRowsCCPacker.h</label>
      </node>
      <node id="40">
        <label>cereal/archives/binary.hpp</label>
      </node>
      <node id="43">
        <label>cereal/types/tuple.hpp</label>
      </node>
      <node id="7">
        <label>stdint.h</label>
      </node>
      <node id="61">
        <label>/home/daenu/Code/conda-mstmap/mstmap/src/tmap/sparsepp/spp_config.h</label>
      </node>
      <node id="48">
        <label>cassert</label>
      </node>
      <node id="33">
        <label>stdexcept</label>
      </node>
      <node id="68">
        <label>numeric</label>
      </node>
      <node id="25">
        <label>ogdf/packing/ComponentSplitterLayout.h</label>
      </node>
      <node id="49">
        <label>string</label>
      </node>
      <node id="20">
        <label>ogdf/energybased/multilevel_mixer/SolarMerger.h</label>
      </node>
      <node id="15">
        <label>ogdf/energybased/multilevel_mixer/SolarPlacer.h</label>
      </node>
      <node id="34">
        <label>map</label>
      </node>
      <node id="11">
        <label>ogdf/basic/extended_graph_alg.h</label>
      </node>
      <node id="0">
        <label>src/tmap/bindings.cc</label>
        <link refid="bindings_8cc"/>
        <childnode refid="1" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>sparsepp/spp.h</label>
      </node>
      <node id="8">
        <label>ogdf/basic/Graph.h</label>
      </node>
      <node id="30">
        <label>fstream</label>
      </node>
      <node id="63">
        <label>/home/daenu/Code/conda-mstmap/mstmap/src/tmap/sparsepp/spp_utils.h</label>
      </node>
      <node id="13">
        <label>ogdf/energybased/multilevel_mixer/ScalingLayout.h</label>
      </node>
      <node id="12">
        <label>ogdf/energybased/FastMultipoleEmbedder.h</label>
      </node>
      <node id="27">
        <label>ogdf/energybased/FMMMLayout.h</label>
      </node>
      <node id="28">
        <label>ogdf/energybased/SpringEmbedderGridVariant.h</label>
      </node>
      <node id="67">
        <label>random</label>
      </node>
      <node id="59">
        <label>ios</label>
      </node>
      <node id="31">
        <label>typeinfo</label>
      </node>
      <node id="57">
        <label>cstdio</label>
      </node>
      <node id="6">
        <label>tuple</label>
      </node>
      <node id="24">
        <label>ogdf/basic/PreprocessorLayout.h</label>
      </node>
      <node id="22">
        <label>ogdf/energybased/multilevel_mixer/IndependentSetMerger.h</label>
      </node>
      <node id="5">
        <label>vector</label>
      </node>
      <node id="55">
        <label>new</label>
      </node>
      <node id="19">
        <label>ogdf/energybased/multilevel_mixer/ZeroPlacer.h</label>
      </node>
      <node id="56">
        <label>utility</label>
      </node>
      <node id="46">
        <label>sstream</label>
      </node>
      <node id="1">
        <label>pybind11/pybind11.h</label>
      </node>
      <node id="17">
        <label>ogdf/energybased/multilevel_mixer/MedianPlacer.h</label>
      </node>
      <node id="14">
        <label>ogdf/energybased/multilevel_mixer/BarycenterPlacer.h</label>
      </node>
      <node id="65">
        <label>minhash.hh</label>
        <link refid="minhash_8hh"/>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>cereal/cereal.hpp</label>
      </node>
      <node id="4">
        <label>layout.hh</label>
        <link refid="layout_8hh"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="58">
        <label>iosfwd</label>
      </node>
      <node id="53">
        <label>cstdlib</label>
      </node>
      <node id="32">
        <label>lshforest.hh</label>
        <link refid="lshforest_8hh"/>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>iostream</label>
      </node>
      <node id="10">
        <label>ogdf/basic/GraphAttributes.h</label>
      </node>
      <node id="69">
        <label>TinySHA1.hh</label>
      </node>
      <node id="9">
        <label>ogdf/fileformats/GraphIO.h</label>
      </node>
      <node id="54">
        <label>cstddef</label>
      </node>
      <node id="39">
        <label>chrono</label>
      </node>
      <node id="18">
        <label>ogdf/energybased/multilevel_mixer/RandomPlacer.h</label>
      </node>
      <node id="62">
        <label>/home/daenu/Code/conda-mstmap/mstmap/src/tmap/sparsepp/spp_traits.h</label>
      </node>
      <node id="35">
        <label>set</label>
      </node>
      <node id="47">
        <label>cereal/types/concepts/pair_associative_container.hpp</label>
      </node>
      <node id="23">
        <label>ogdf/energybased/multilevel_mixer/LocalBiconnectedMerger.h</label>
      </node>
      <node id="37">
        <label>algorithm</label>
      </node>
      <node id="16">
        <label>ogdf/energybased/multilevel_mixer/CirclePlacer.h</label>
      </node>
      <node id="3">
        <label>pybind11/stl_bind.h</label>
      </node>
      <node id="36">
        <label>cstring</label>
      </node>
      <node id="60">
        <label>/home/daenu/Code/conda-mstmap/mstmap/src/tmap/sparsepp/spp_stdint.h</label>
      </node>
      <node id="41">
        <label>cereal/types/vector.hpp</label>
      </node>
      <node id="52">
        <label>memory</label>
      </node>
      <node id="64">
        <label>initializer_list</label>
      </node>
      <node id="21">
        <label>ogdf/energybased/multilevel_mixer/EdgeCoverMerger.h</label>
      </node>
      <node id="2">
        <label>pybind11/stl.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="bindings_8cc_1a8cc96963394e1bf2d1f2c8c298a8961f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>PYBIND11_MAKE_OPAQUE</definition>
        <argsstring>(std::vector&lt; uint8_t &gt;)</argsstring>
        <name>PYBIND11_MAKE_OPAQUE</name>
        <param>
          <type>std::vector&lt; uint8_t &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tmap/bindings.cc" line="21" column="1"/>
      </memberdef>
      <memberdef kind="function" id="bindings_8cc_1adf1d3c96cae502b5022e395df7c8f792" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>PYBIND11_MAKE_OPAQUE</definition>
        <argsstring>(std::vector&lt; uint16_t &gt;)</argsstring>
        <name>PYBIND11_MAKE_OPAQUE</name>
        <param>
          <type>std::vector&lt; uint16_t &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tmap/bindings.cc" line="22" column="1"/>
      </memberdef>
      <memberdef kind="function" id="bindings_8cc_1a27eff19ba73a3e99fe1f7951db3a05a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>PYBIND11_MAKE_OPAQUE</definition>
        <argsstring>(std::vector&lt; uint32_t &gt;)</argsstring>
        <name>PYBIND11_MAKE_OPAQUE</name>
        <param>
          <type>std::vector&lt; uint32_t &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tmap/bindings.cc" line="23" column="1"/>
      </memberdef>
      <memberdef kind="function" id="bindings_8cc_1a0ac4737d613502a5272d1c7c55c75000" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>PYBIND11_MAKE_OPAQUE</definition>
        <argsstring>(std::vector&lt; uint64_t &gt;)</argsstring>
        <name>PYBIND11_MAKE_OPAQUE</name>
        <param>
          <type>std::vector&lt; uint64_t &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tmap/bindings.cc" line="24" column="1"/>
      </memberdef>
      <memberdef kind="function" id="bindings_8cc_1adc31052ce19269023b82cb33511fbc37" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>PYBIND11_MAKE_OPAQUE</definition>
        <argsstring>(std::vector&lt; float &gt;)</argsstring>
        <name>PYBIND11_MAKE_OPAQUE</name>
        <param>
          <type>std::vector&lt; float &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tmap/bindings.cc" line="25" column="1"/>
      </memberdef>
      <memberdef kind="function" id="bindings_8cc_1a4274a51ba9942c31b5553c1678c70e1c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>PYBIND11_MODULE</definition>
        <argsstring>(tmap, m)</argsstring>
        <name>PYBIND11_MODULE</name>
        <param>
          <type>tmap</type>
        </param>
        <param>
          <type>m</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/tmap/bindings.cc" line="27" column="1" bodyfile="src/tmap/bindings.cc" bodystart="27" bodyend="148"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Pybind11 bindings for tmap. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Daniel Probst (<ulink url="mailto:daenuprobst@gmail.com">daenuprobst@gmail.com</ulink>) </para></simplesect>
<simplesect kind="version"><para>0.1 </para></simplesect>
<simplesect kind="date"><para>2019-06-17 </para></simplesect>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="10"><highlight class="preprocessor">#include<sp/>&lt;pybind11/pybind11.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;pybind11/stl.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;pybind11/stl_bind.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="layout_8hh" kindref="compound">layout.hh</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="lshforest_8hh" kindref="compound">lshforest.hh</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="minhash_8hh" kindref="compound">minhash.hh</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacetmap" kindref="compound">tmap</ref>;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">py<sp/>=<sp/>pybind11;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal">PYBIND11_MAKE_OPAQUE(std::vector&lt;uint8_t&gt;);</highlight></codeline>
<codeline lineno="22"><highlight class="normal">PYBIND11_MAKE_OPAQUE(std::vector&lt;uint16_t&gt;);</highlight></codeline>
<codeline lineno="23"><highlight class="normal">PYBIND11_MAKE_OPAQUE(std::vector&lt;uint32_t&gt;);</highlight></codeline>
<codeline lineno="24"><highlight class="normal">PYBIND11_MAKE_OPAQUE(std::vector&lt;uint64_t&gt;);</highlight></codeline>
<codeline lineno="25"><highlight class="normal">PYBIND11_MAKE_OPAQUE(std::vector&lt;float&gt;);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal">PYBIND11_MODULE(<ref refid="namespacetmap" kindref="compound">tmap</ref>,<sp/>m)</highlight></codeline>
<codeline lineno="28"><highlight class="normal">{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>py::bind_vector&lt;std::vector&lt;uint8_t&gt;&gt;(m,<sp/></highlight><highlight class="stringliteral">&quot;VectorUchar&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>py::bind_vector&lt;std::vector&lt;uint16_t&gt;&gt;(m,<sp/></highlight><highlight class="stringliteral">&quot;VectorUsmall&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>py::bind_vector&lt;std::vector&lt;uint32_t&gt;&gt;(m,<sp/></highlight><highlight class="stringliteral">&quot;VectorUint&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>py::bind_vector&lt;std::vector&lt;float&gt;&gt;(m,<sp/></highlight><highlight class="stringliteral">&quot;VectorFloat&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>py::bind_vector&lt;std::vector&lt;uint64_t&gt;&gt;(m,<sp/></highlight><highlight class="stringliteral">&quot;VectorUlong&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>py::enum_&lt;ScalingType&gt;(m,<sp/></highlight><highlight class="stringliteral">&quot;ScalingType&quot;</highlight><highlight class="normal">,<sp/>py::arithmetic())</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.value(</highlight><highlight class="stringliteral">&quot;Absolute&quot;</highlight><highlight class="normal">,<sp/>ScalingType::Absolute)</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.value(</highlight><highlight class="stringliteral">&quot;RelativeToAvgLength&quot;</highlight><highlight class="normal">,<sp/>ScalingType::RelativeToAvgLength)</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.value(</highlight><highlight class="stringliteral">&quot;RelativeToDesiredLength&quot;</highlight><highlight class="normal">,<sp/>ScalingType::RelativeToDesiredLength)</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.value(</highlight><highlight class="stringliteral">&quot;RelativeToDrawing&quot;</highlight><highlight class="normal">,<sp/>ScalingType::RelativeToDrawing)</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.export_values();</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>py::enum_&lt;Placer&gt;(m,<sp/></highlight><highlight class="stringliteral">&quot;Placer&quot;</highlight><highlight class="normal">,<sp/>py::arithmetic())</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.value(</highlight><highlight class="stringliteral">&quot;Barycenter&quot;</highlight><highlight class="normal">,<sp/>Placer::Barycenter)</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.value(</highlight><highlight class="stringliteral">&quot;Solar&quot;</highlight><highlight class="normal">,<sp/>Placer::Solar)</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.value(</highlight><highlight class="stringliteral">&quot;Circle&quot;</highlight><highlight class="normal">,<sp/>Placer::Circle)</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.value(</highlight><highlight class="stringliteral">&quot;Median&quot;</highlight><highlight class="normal">,<sp/>Placer::Median)</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.value(</highlight><highlight class="stringliteral">&quot;Random&quot;</highlight><highlight class="normal">,<sp/>Placer::Random)</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.value(</highlight><highlight class="stringliteral">&quot;Zero&quot;</highlight><highlight class="normal">,<sp/>Placer::Zero)</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.export_values();</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>py::enum_&lt;Merger&gt;(m,<sp/></highlight><highlight class="stringliteral">&quot;Merger&quot;</highlight><highlight class="normal">,<sp/>py::arithmetic())</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.value(</highlight><highlight class="stringliteral">&quot;EdgeCover&quot;</highlight><highlight class="normal">,<sp/>Merger::EdgeCover)</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.value(</highlight><highlight class="stringliteral">&quot;LocalBiconnected&quot;</highlight><highlight class="normal">,<sp/>Merger::LocalBiconnected)</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.value(</highlight><highlight class="stringliteral">&quot;Solar&quot;</highlight><highlight class="normal">,<sp/>Merger::Solar)</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.value(</highlight><highlight class="stringliteral">&quot;IndependentSet&quot;</highlight><highlight class="normal">,<sp/>Merger::IndependentSet)</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.export_values();</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>py::class_&lt;LayoutConfiguration&gt;(m,<sp/></highlight><highlight class="stringliteral">&quot;LayoutConfiguration&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.def(py::init())</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.def_readwrite(</highlight><highlight class="stringliteral">&quot;k&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="structtmap_1_1LayoutConfiguration_1a80ddc818732d708764fbd83ad7b7d153" kindref="member">LayoutConfiguration::k</ref>)</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.def_readwrite(</highlight><highlight class="stringliteral">&quot;kc&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="structtmap_1_1LayoutConfiguration_1ae63c0a1d5956cbdb837f3aff1978f867" kindref="member">LayoutConfiguration::kc</ref>)</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.def_readwrite(</highlight><highlight class="stringliteral">&quot;fme_iterations&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="structtmap_1_1LayoutConfiguration_1aa0b26a532aedb8f0fe4490c9c90b0e84" kindref="member">LayoutConfiguration::fme_iterations</ref>)</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.def_readwrite(</highlight><highlight class="stringliteral">&quot;fme_randomize&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="structtmap_1_1LayoutConfiguration_1a821bf612fb3063344ca0c6b161424a7b" kindref="member">LayoutConfiguration::fme_randomize</ref>)</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.def_readwrite(</highlight><highlight class="stringliteral">&quot;fme_threads&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="structtmap_1_1LayoutConfiguration_1a7630a7d7513c3f51ea00802a3f67ba92" kindref="member">LayoutConfiguration::fme_threads</ref>)</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.def_readwrite(</highlight><highlight class="stringliteral">&quot;fme_precision&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="structtmap_1_1LayoutConfiguration_1a9e4d43d8f65c21404cc9912c11a3eba7" kindref="member">LayoutConfiguration::fme_precision</ref>)</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.def_readwrite(</highlight><highlight class="stringliteral">&quot;sl_repeats&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="structtmap_1_1LayoutConfiguration_1adf81cfbcba521fd87a73dd25eb9c21e7" kindref="member">LayoutConfiguration::sl_repeats</ref>)</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.def_readwrite(</highlight><highlight class="stringliteral">&quot;sl_extra_scaling_steps&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="structtmap_1_1LayoutConfiguration_1aefd713cfba563ea8ee9a432c0359c440" kindref="member">LayoutConfiguration::sl_extra_scaling_steps</ref>)</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.def_readwrite(</highlight><highlight class="stringliteral">&quot;sl_scaling_min&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="structtmap_1_1LayoutConfiguration_1af2e01075c5fe2a36c6018b40a6919d7a" kindref="member">LayoutConfiguration::sl_scaling_min</ref>)</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.def_readwrite(</highlight><highlight class="stringliteral">&quot;sl_scaling_max&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="structtmap_1_1LayoutConfiguration_1aa29669e99b7e1df2bcb95d6379da7cc3" kindref="member">LayoutConfiguration::sl_scaling_max</ref>)</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.def_readwrite(</highlight><highlight class="stringliteral">&quot;sl_scaling_type&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="structtmap_1_1LayoutConfiguration_1a618d286e035eca76e0e464513624beec" kindref="member">LayoutConfiguration::sl_scaling_type</ref>)</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.def_readwrite(</highlight><highlight class="stringliteral">&quot;mmm_repeats&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="structtmap_1_1LayoutConfiguration_1aff2347eb71c98bbc72f16b4de32d4af0" kindref="member">LayoutConfiguration::mmm_repeats</ref>)</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.def_readwrite(</highlight><highlight class="stringliteral">&quot;placer&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="structtmap_1_1LayoutConfiguration_1ae81108ee33f42b2c084b540f902bbb7d" kindref="member">LayoutConfiguration::placer</ref>)</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.def_readwrite(</highlight><highlight class="stringliteral">&quot;merger&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="structtmap_1_1LayoutConfiguration_1aeee45308fd8dbda38fbc7b8c7ff9212f" kindref="member">LayoutConfiguration::merger</ref>)</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.def_readwrite(</highlight><highlight class="stringliteral">&quot;merger_factor&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="structtmap_1_1LayoutConfiguration_1a72fe4f8f738d2d400f70db97c4273a46" kindref="member">LayoutConfiguration::merger_factor</ref>)</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.def_readwrite(</highlight><highlight class="stringliteral">&quot;merger_adjustment&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="structtmap_1_1LayoutConfiguration_1a16109420c8ec0a4c3021345fd943daf6" kindref="member">LayoutConfiguration::merger_adjustment</ref>)</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.def_readwrite(</highlight><highlight class="stringliteral">&quot;node_size&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="structtmap_1_1LayoutConfiguration_1a9a97e2c0c9edb212190d3afcc3ce2924" kindref="member">LayoutConfiguration::node_size</ref>)</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.def(</highlight><highlight class="stringliteral">&quot;__repr__&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="structtmap_1_1LayoutConfiguration_1a498341508ea4806795f44e376af18e11" kindref="member">LayoutConfiguration::ToString</ref>);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>py::class_&lt;GraphProperties&gt;(m,<sp/></highlight><highlight class="stringliteral">&quot;GraphProperties&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.def(py::init())</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.def_readwrite(</highlight><highlight class="stringliteral">&quot;mst_weight&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="structtmap_1_1GraphProperties_1a51fa52c1cc9c8d382d507349e99447be" kindref="member">GraphProperties::mst_weight</ref>)</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.def_readwrite(</highlight><highlight class="stringliteral">&quot;n_connected_components&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="structtmap_1_1GraphProperties_1a3467571c1e645268e55416504809f7c5" kindref="member">GraphProperties::n_connected_components</ref>)</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.def_readwrite(</highlight><highlight class="stringliteral">&quot;n_isolated_vertices&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="structtmap_1_1GraphProperties_1a954e8fd087b44b3c568ea07ae2f1efea" kindref="member">GraphProperties::n_isolated_vertices</ref>)</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.def_readwrite(</highlight><highlight class="stringliteral">&quot;degrees&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="structtmap_1_1GraphProperties_1af4c85653b3bf56c6dbf19d7a38af40bc" kindref="member">GraphProperties::degrees</ref>)</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.def_readwrite(</highlight><highlight class="stringliteral">&quot;adjacency_list&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="structtmap_1_1GraphProperties_1a04c11168f810fdaf8b7bfecf96413ba7" kindref="member">GraphProperties::adjacency_list</ref>);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>m.def(</highlight><highlight class="stringliteral">&quot;layout_from_lsh_forest&quot;</highlight><highlight class="normal">,<sp/>&amp;LayoutFromLSHForest,</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>py::arg(</highlight><highlight class="stringliteral">&quot;lsh_forest&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>py::arg(</highlight><highlight class="stringliteral">&quot;config&quot;</highlight><highlight class="normal">)<sp/>=<sp/><ref refid="structtmap_1_1LayoutConfiguration" kindref="compound">LayoutConfiguration</ref>(),</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>py::arg(</highlight><highlight class="stringliteral">&quot;create_mst&quot;</highlight><highlight class="normal">)<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>py::arg(</highlight><highlight class="stringliteral">&quot;clear_lsh_forest&quot;</highlight><highlight class="normal">)<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>py::arg(</highlight><highlight class="stringliteral">&quot;weighted&quot;</highlight><highlight class="normal">)<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>m.def(</highlight><highlight class="stringliteral">&quot;mst_from_lsh_forest&quot;</highlight><highlight class="normal">,<sp/>&amp;MSTFromLSHForest,</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>py::arg(</highlight><highlight class="stringliteral">&quot;lsh_forest&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>py::arg(</highlight><highlight class="stringliteral">&quot;k&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>py::arg(</highlight><highlight class="stringliteral">&quot;kc&quot;</highlight><highlight class="normal">)<sp/>=<sp/>10,</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>py::arg(</highlight><highlight class="stringliteral">&quot;weighted&quot;</highlight><highlight class="normal">)<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>m.def(</highlight><highlight class="stringliteral">&quot;layout_from_edge_list&quot;</highlight><highlight class="normal">,<sp/>&amp;LayoutFromEdgeList,</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>py::arg(</highlight><highlight class="stringliteral">&quot;vertex_count&quot;</highlight><highlight class="normal">),<sp/>py::arg(</highlight><highlight class="stringliteral">&quot;edges&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>py::arg(</highlight><highlight class="stringliteral">&quot;config&quot;</highlight><highlight class="normal">)<sp/>=<sp/><ref refid="structtmap_1_1LayoutConfiguration" kindref="compound">LayoutConfiguration</ref>(),</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>py::arg(</highlight><highlight class="stringliteral">&quot;create_mst&quot;</highlight><highlight class="normal">)<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>py::class_&lt;LSHForest&gt;(m,<sp/></highlight><highlight class="stringliteral">&quot;LSHForest&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.def(py::init&lt;unsigned<sp/>int,<sp/>unsigned<sp/>int,<sp/>bool,<sp/>bool&gt;(),<sp/>py::arg(</highlight><highlight class="stringliteral">&quot;d&quot;</highlight><highlight class="normal">)<sp/>=<sp/>128,<sp/>py::arg(</highlight><highlight class="stringliteral">&quot;l&quot;</highlight><highlight class="normal">)<sp/>=<sp/>8,<sp/>py::arg(</highlight><highlight class="stringliteral">&quot;store&quot;</highlight><highlight class="normal">)<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>py::arg(</highlight><highlight class="stringliteral">&quot;file_backed&quot;</highlight><highlight class="normal">)<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.def(</highlight><highlight class="stringliteral">&quot;add&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classtmap_1_1LSHForest_1a480d0de16bc1e4b1365bf97b9b60223a" kindref="member">LSHForest::Add</ref>)</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.def(</highlight><highlight class="stringliteral">&quot;batch_add&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classtmap_1_1LSHForest_1ab3f73f59918a37b63662679461828cbb" kindref="member">LSHForest::BatchAdd</ref>)</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.def(</highlight><highlight class="stringliteral">&quot;index&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classtmap_1_1LSHForest_1aba68c9cab8cc3c32e684e08b4f9d0a33" kindref="member">LSHForest::Index</ref>)</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.def(</highlight><highlight class="stringliteral">&quot;is_clean&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classtmap_1_1LSHForest_1a7785c1a7f17eddd5e943db4b5d6d7cf2" kindref="member">LSHForest::IsClean</ref>)</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.def(</highlight><highlight class="stringliteral">&quot;query_linear_scan&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classtmap_1_1LSHForest_1a2ba770074cd9c0e6860b30679793c569" kindref="member">LSHForest::QueryLinearScan</ref>,<sp/>py::arg(</highlight><highlight class="stringliteral">&quot;vec&quot;</highlight><highlight class="normal">),<sp/>py::arg(</highlight><highlight class="stringliteral">&quot;k&quot;</highlight><highlight class="normal">),<sp/>py::arg(</highlight><highlight class="stringliteral">&quot;kc&quot;</highlight><highlight class="normal">)<sp/>=<sp/>10,<sp/>py::arg(</highlight><highlight class="stringliteral">&quot;weighted&quot;</highlight><highlight class="normal">)<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.def(</highlight><highlight class="stringliteral">&quot;query_linear_scan_exclude&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classtmap_1_1LSHForest_1a5afd77e1f9349edcdec32a1d7aa3f38e" kindref="member">LSHForest::QueryLinearScanExclude</ref>,<sp/>py::arg(</highlight><highlight class="stringliteral">&quot;vec&quot;</highlight><highlight class="normal">),<sp/>py::arg(</highlight><highlight class="stringliteral">&quot;k&quot;</highlight><highlight class="normal">),<sp/>py::arg(</highlight><highlight class="stringliteral">&quot;exclude&quot;</highlight><highlight class="normal">),<sp/>py::arg(</highlight><highlight class="stringliteral">&quot;kc&quot;</highlight><highlight class="normal">)<sp/>=<sp/>10,<sp/>py::arg(</highlight><highlight class="stringliteral">&quot;weighted&quot;</highlight><highlight class="normal">)<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.def(</highlight><highlight class="stringliteral">&quot;query_linear_scan_by_id&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classtmap_1_1LSHForest_1ae4e013129270d53af27091c2f3e4e5d6" kindref="member">LSHForest::QueryLinearScanById</ref>,<sp/>py::arg(</highlight><highlight class="stringliteral">&quot;id&quot;</highlight><highlight class="normal">),<sp/>py::arg(</highlight><highlight class="stringliteral">&quot;k&quot;</highlight><highlight class="normal">),<sp/>py::arg(</highlight><highlight class="stringliteral">&quot;kc&quot;</highlight><highlight class="normal">)<sp/>=<sp/>10,<sp/>py::arg(</highlight><highlight class="stringliteral">&quot;weighted&quot;</highlight><highlight class="normal">)<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.def(</highlight><highlight class="stringliteral">&quot;query_linear_scan_exclude_by_id&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classtmap_1_1LSHForest_1af8cff8cd9cf3b1d30823e9d36938745b" kindref="member">LSHForest::QueryLinearScanExcludeById</ref>,<sp/>py::arg(</highlight><highlight class="stringliteral">&quot;id&quot;</highlight><highlight class="normal">),<sp/>py::arg(</highlight><highlight class="stringliteral">&quot;k&quot;</highlight><highlight class="normal">),<sp/>py::arg(</highlight><highlight class="stringliteral">&quot;exclude&quot;</highlight><highlight class="normal">),<sp/>py::arg(</highlight><highlight class="stringliteral">&quot;kc&quot;</highlight><highlight class="normal">)<sp/>=<sp/>10,<sp/>py::arg(</highlight><highlight class="stringliteral">&quot;weighted&quot;</highlight><highlight class="normal">)<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.def(</highlight><highlight class="stringliteral">&quot;linear_scan&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classtmap_1_1LSHForest_1a63e22972fbd38e3edc8f321f88a6be8d" kindref="member">LSHForest::LinearScan</ref>,<sp/>py::arg(</highlight><highlight class="stringliteral">&quot;vec&quot;</highlight><highlight class="normal">),<sp/>py::arg(</highlight><highlight class="stringliteral">&quot;indices&quot;</highlight><highlight class="normal">),<sp/>py::arg(</highlight><highlight class="stringliteral">&quot;k&quot;</highlight><highlight class="normal">)<sp/>=<sp/>0,<sp/>py::arg(</highlight><highlight class="stringliteral">&quot;weighted&quot;</highlight><highlight class="normal">)<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.def(</highlight><highlight class="stringliteral">&quot;query&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classtmap_1_1LSHForest_1a0da6325b50a92db6ff6c49bd62a5e95b" kindref="member">LSHForest::Query</ref>)</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.def(</highlight><highlight class="stringliteral">&quot;queryExclude&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classtmap_1_1LSHForest_1a7aba9b1df0273b71ed2d9233d05ed0db" kindref="member">LSHForest::QueryExclude</ref>)</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.def(</highlight><highlight class="stringliteral">&quot;query_by_id&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classtmap_1_1LSHForest_1aa200b72cc60947e5e03fd72ea726a999" kindref="member">LSHForest::QueryById</ref>)</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.def(</highlight><highlight class="stringliteral">&quot;query_exclude_by_id&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classtmap_1_1LSHForest_1a0bcdb607c4e08e0e620b4d1d1dd12f86" kindref="member">LSHForest::QueryExcludeById</ref>)</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.def(</highlight><highlight class="stringliteral">&quot;batch_query&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classtmap_1_1LSHForest_1adec697793677c79683490b776ae8642c" kindref="member">LSHForest::BatchQuery</ref>)</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.def(</highlight><highlight class="stringliteral">&quot;get_all_nearest_neighbors&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classtmap_1_1LSHForest_1a378f0494bce3354bb0d618558f316c84" kindref="member">LSHForest::GetAllNearestNeighbors</ref>,<sp/>py::arg(</highlight><highlight class="stringliteral">&quot;k&quot;</highlight><highlight class="normal">),<sp/>py::arg(</highlight><highlight class="stringliteral">&quot;kc&quot;</highlight><highlight class="normal">)<sp/>=<sp/>10,<sp/>py::arg(</highlight><highlight class="stringliteral">&quot;weighted&quot;</highlight><highlight class="normal">)<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.def(</highlight><highlight class="stringliteral">&quot;get_knn_graph&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classtmap_1_1LSHForest_1a11ccbeea4356cce12b579566925d865f" kindref="member">LSHForest::GetKNNGraph</ref>,<sp/>py::arg(</highlight><highlight class="stringliteral">&quot;from&quot;</highlight><highlight class="normal">),<sp/>py::arg(</highlight><highlight class="stringliteral">&quot;to&quot;</highlight><highlight class="normal">),<sp/>py::arg(</highlight><highlight class="stringliteral">&quot;weight&quot;</highlight><highlight class="normal">),<sp/>py::arg(</highlight><highlight class="stringliteral">&quot;k&quot;</highlight><highlight class="normal">),<sp/>py::arg(</highlight><highlight class="stringliteral">&quot;kc&quot;</highlight><highlight class="normal">)<sp/>=<sp/>10,<sp/>py::arg(</highlight><highlight class="stringliteral">&quot;weighted&quot;</highlight><highlight class="normal">)<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.def(</highlight><highlight class="stringliteral">&quot;get_distance&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classtmap_1_1LSHForest_1ab1c5e002deea04a625ab141f280bab92" kindref="member">LSHForest::GetDistance</ref>)</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.def(</highlight><highlight class="stringliteral">&quot;get_weighted_distance&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classtmap_1_1LSHForest_1aa6c035b27040909b3d7a8782ad1c63b8" kindref="member">LSHForest::GetWeightedDistance</ref>)</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.def(</highlight><highlight class="stringliteral">&quot;get_all_distances&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classtmap_1_1LSHForest_1a438a46f67fb257ae85c3dd16e8b194df" kindref="member">LSHForest::GetAllDistances</ref>)</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.def(</highlight><highlight class="stringliteral">&quot;get_distance_by_id&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classtmap_1_1LSHForest_1a8fc81622125b40114951a61cbe90863f" kindref="member">LSHForest::GetDistanceById</ref>)</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.def(</highlight><highlight class="stringliteral">&quot;get_weighted_distance_by_id&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classtmap_1_1LSHForest_1ab00052289bb6bea152e6024049eebcc5" kindref="member">LSHForest::GetWeightedDistanceById</ref>)</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.def(</highlight><highlight class="stringliteral">&quot;store&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classtmap_1_1LSHForest_1a1731bf94cd09e7ebc4a10dd42145dc51" kindref="member">LSHForest::Store</ref>)</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.def(</highlight><highlight class="stringliteral">&quot;restore&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classtmap_1_1LSHForest_1a869273bd3d4c72c4c296dc42519558c8" kindref="member">LSHForest::Restore</ref>)</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.def(</highlight><highlight class="stringliteral">&quot;size&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classtmap_1_1LSHForest_1a8ba5c1f500e915c6717c64ac24744874" kindref="member">LSHForest::size</ref>)</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.def(</highlight><highlight class="stringliteral">&quot;get_hash&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classtmap_1_1LSHForest_1a78106dd9e3a9a9ec012e5405445be78c" kindref="member">LSHForest::GetHash</ref>)</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>.def(&quot;get_layout&quot;,<sp/>&amp;LSHForest::GetLayout,<sp/>py::arg(&quot;config&quot;)<sp/>=<sp/>LayoutConfiguration(),<sp/>py::arg(&quot;create_mst&quot;)<sp/>=<sp/>true,<sp/>py::arg(&quot;mem_dump&quot;)<sp/>=<sp/>true)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.def(</highlight><highlight class="stringliteral">&quot;clear&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classtmap_1_1LSHForest_1a9ee2595fb0f85d917989234ab4aaee8d" kindref="member">LSHForest::Clear</ref>);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>py::class_&lt;Minhash&gt;(m,<sp/></highlight><highlight class="stringliteral">&quot;Minhash&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.def(py::init&lt;unsigned<sp/>int,<sp/>unsigned<sp/>int,<sp/>unsigned<sp/>int&gt;(),<sp/>py::arg(</highlight><highlight class="stringliteral">&quot;d&quot;</highlight><highlight class="normal">)<sp/>=<sp/>128,<sp/>py::arg(</highlight><highlight class="stringliteral">&quot;seed&quot;</highlight><highlight class="normal">)<sp/>=<sp/>42,<sp/>py::arg(</highlight><highlight class="stringliteral">&quot;sample_size&quot;</highlight><highlight class="normal">)<sp/>=<sp/>128)</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.def(</highlight><highlight class="stringliteral">&quot;from_binary_array&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classtmap_1_1Minhash_1a1418049bb8c8f70255c336e58a9b9fec" kindref="member">Minhash::FromBinaryArray</ref>)</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.def(</highlight><highlight class="stringliteral">&quot;batch_from_binary_array&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classtmap_1_1Minhash_1a083c1328a9830ec585613c213b1730cc" kindref="member">Minhash::BatchFromBinaryArray</ref>)</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.def(</highlight><highlight class="stringliteral">&quot;from_sparse_binary_array&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classtmap_1_1Minhash_1aec48525d1c8006f573b0c534e53d894a" kindref="member">Minhash::FromSparseBinaryArray</ref>)</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.def(</highlight><highlight class="stringliteral">&quot;batch_from_sparse_binary_array&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classtmap_1_1Minhash_1a490cf682e7445393fcf2908d74498ea5" kindref="member">Minhash::BatchFromSparseBinaryArray</ref>)</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.def(</highlight><highlight class="stringliteral">&quot;from_string_array&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classtmap_1_1Minhash_1ab21e92280c7265a8df9477734361b8fc" kindref="member">Minhash::FromStringArray</ref>)</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.def(</highlight><highlight class="stringliteral">&quot;batch_from_string_array&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classtmap_1_1Minhash_1a9382e443b9f622c4564449373051d006" kindref="member">Minhash::BatchFromStringArray</ref>)</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.def(</highlight><highlight class="stringliteral">&quot;from_weight_array&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classtmap_1_1Minhash_1ac77f5302d479a2bc2c23a2304a9cf049" kindref="member">Minhash::FromWeightArray</ref>)</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.def(</highlight><highlight class="stringliteral">&quot;batch_from_weight_array&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classtmap_1_1Minhash_1a20feda993a498b2d92b8e81ca71f73a9" kindref="member">Minhash::BatchFromWeightArray</ref>)</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.def(</highlight><highlight class="stringliteral">&quot;batch_from_int_weight_array&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classtmap_1_1Minhash_1ac0112cf3a99b2e882803a07dc0f0a620" kindref="member">Minhash::BatchFromIntWeightArray</ref>)</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.def(</highlight><highlight class="stringliteral">&quot;get_distance&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classtmap_1_1Minhash_1a21df254dd86462a1dcbe45285c747e71" kindref="member">Minhash::GetDistance</ref>)</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.def(</highlight><highlight class="stringliteral">&quot;get_weighted_distance&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classtmap_1_1Minhash_1a7a8090c1629a6783fe0e17b227bd59ca" kindref="member">Minhash::GetWeightedDistance</ref>);</highlight></codeline>
<codeline lineno="148"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/tmap/bindings.cc"/>
  </compounddef>
</doxygen>
