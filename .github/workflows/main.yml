# name: Build on Ubuntu, Windows, and MacOS
# on: [push, pull_request]
# jobs:
#   - job: Ubuntu
#     pool:
#       vmImage: "ubuntu-latest"

#     steps:
#       - script: |
#           source ${CONDA}/etc/profile.d/conda.sh
#           sudo chown -R ${USER} ${CONDA}
#           conda config --set always_yes yes --set changeps1 no
#           conda update -q conda
#           conda create --name tmbuild
#           conda activate tmbuild
#           conda install -y conda-build
#         displayName: Setup Conda
#       - bash: cd tmap
#       - script: |
#           source ${CONDA}/etc/profile.d/conda.sh
#           conda activate tmbuild
#           conda build ogdf-conda
#         displayName: "Conda build ogdf"
#       - script: |
#           source ${CONDA}/etc/profile.d/conda.sh
#           conda activate tmbuild
#           conda build tmap
#         displayName: "Conda build tmap"
#       - task: CopyFiles@2
#         displayName: "Copy Files to: $(build.artifactStagingDirectory)"
#         inputs:
#           SourceFolder: "/usr/share/miniconda/envs/tmbuild/conda-bld/linux-64/"
#           Contents: "*.tar.bz2"
#           TargetFolder: "$(build.artifactStagingDirectory)"
#       - task: PublishBuildArtifacts@1
#         displayName: "Publish Artifact: LinuxPackages"

#   - job: Windows
#     pool:
#       vmImage: vs2017-win2016
#     steps:
#       - powershell: Write-Host "##vso[task.prependpath]$env:CONDA\Scripts"
#         displayName: Setup build environment
#       - script: |
#           conda config --set always_yes yes --set changeps1 no
#           conda update -q conda
#           conda create --name tmbuild
#           conda activate tmbuild
#           conda install -y conda-build
#         displayName: Setup Conda
#       - bash: cd tmap
#       - script: |
#           conda activate tmbuild
#           conda build  ogdf-conda
#         displayName: "Conda build ogdf"
#       - script: |
#           conda activate tmbuild
#           conda build tmap
#         displayName: "Conda build tmap"
#       - task: CopyFiles@2
#         displayName: "Copy Files to: $(build.artifactStagingDirectory)"
#         inputs:
#           SourceFolder: 'C:\Miniconda\conda-bld\win-64\'
#           Contents: "*.tar.bz2"
#           TargetFolder: "$(build.artifactStagingDirectory)"
#       - task: PublishBuildArtifacts@1
#         displayName: "Publish Artifact: WindowsPackages"

#   - job: MacOS
#     pool:
#       vmImage: macos-10.13
#     variables:
#       target_platform: 10.13
#     steps:
#       - bash: |
#           wget https://github.com/phracker/MacOSX-SDKs/releases/download/10.13/MacOSX$(target_platform).sdk.tar.xz
#           sudo mkdir /opt
#           sudo install -d -m 0777 /opt
#           tar Jxvf MacOSX$(target_platform).sdk.tar.xz -C /opt
#         displayName: Install MacOSX $(target_platform) SDK
#       - script: |
#           echo "Removing homebrew from Azure to avoid conflicts."
#           curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/uninstall > ~/uninstall_homebrew
#           chmod +x ~/uninstall_homebrew
#           ~/uninstall_homebrew -fq
#           rm ~/uninstall_homebrew
#         displayName: Remove Homebrew
#       - script: |
#           source ${CONDA}/etc/profile.d/conda.sh
#           sudo chown -R ${USER} ${CONDA}
#           conda config --set always_yes yes --set changeps1 no
#           conda update -q conda
#           conda create --name tmbuild
#           conda activate tmbuild
#           conda install -y conda-build
#         displayName: Setup Conda
#       - bash: cd tmap
#       - script: |
#           source ${CONDA}/etc/profile.d/conda.sh
#           conda activate tmbuild
#           conda build ogdf-conda
#         displayName: "Conda build ogdf"
#       - script: |
#           source ${CONDA}/etc/profile.d/conda.sh
#           conda activate tmbuild
#           conda build tmap
#         displayName: "Conda build tmap"
#       - task: CopyFiles@2
#         displayName: "Copy Files to: $(build.artifactStagingDirectory)"
#         inputs:
#           SourceFolder: "/usr/local/miniconda/envs/tmbuild/conda-bld/osx-64/"
#           Contents: "*.tar.bz2"
#           TargetFolder: "$(build.artifactStagingDirectory)"
#       - task: PublishBuildArtifacts@1
#         displayName: "Publish Artifact: MacOSPackages"






name: Build on Ubuntu, Windows, and MacOS
on: [push, pull_request, workflow_dispatch]

jobs:
  build_ubuntu:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.